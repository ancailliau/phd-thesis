# Root Goals

declare goal [ locals_warned_when_risk_imminent ]
  name "Achieve [LocalsWarnedWhenRiskImminent]"
  rsr .65
  refinedby radar_depth_acquired_every_5_seconds, speed_acquired_every_5_seconds, critical_detected, locals_warned
end

declare goal [ avoid_false_warning ]
  name "Avoid [FalseWarning]"
  refinedby acquired_radar_depth_accurate, acquired_ultrasound_speed_accurate
end

# Goals

declare goal [ radar_depth_acquired_every_5_seconds ]
	name "Achieve [DepthAcquiredEvery5SecondsByRadar]"
	formalspec when not radarDepthAcquired() then sooner-or-later, before 5 seconds, radarDepthAcquired()
  assignedto radarDepthSensor
  obstructedby depth_not_acquired
end

declare goal [ acquired_radar_depth_accurate ]
  name "Maintain [AcquiredRadarDepthAccurate]"
  formalspec when radarDepthAcquired() and acquiredDepthCritical() then sooner-or-later, before 3 seconds, depthAccurate()
  assignedto radarDepthSensor
  obstructedby acquired_depth_not_accurate
end

declare goal [ speed_acquired_every_5_seconds ]
	name "Achieve [SpeedAcquiredEvery5SecondsByUltrasound]"
	formalspec when not speedAcquiredByUltrasound() then sooner-or-later, before 5 seconds, speedAcquiredByUltrasound()
  assignedto ultrasoundSensor
  obstructedby speed_not_acquired
end

declare goal [ acquired_ultrasound_speed_accurate ]
  name "Maintain [UltrasoundSpeedAccurate]"
  formalspec when speedAcquiredByUltrasound() and acquiredSpeedCritical() then sooner-or-later, before 3 seconds, speedAccurate()
  assignedto ultrasoundSensor
  obstructedby acquired_speed_not_accurate
end

declare goal [ locals_warned ]
  name "Achieve [LocalsWarnedByPhoneWhenLevelsCritical]"
  formalspec when acquiredDepthCritical() and acquiredSpeedCritical()
             then sooner-or-later, before 5 seconds, localsWarnedByPhone()
  assignedto voiceWarner
  obstructedby locals_not_warned
end

declare goal [ critical_detected ]
  name "Achieve [LevelsCriticalDetectedWhenDataAcquired]"
  assignedto fds
#  obstructedby critical_not_detected
end

# Root obstacles

declare obstacle [ depth_not_acquired ]
  name "Depth Not Acquired"
  refinedby depth_broken
end

declare obstacle [ acquired_depth_not_accurate ]
  name "Acquired Depth Not Accurate"
  refinedby dusty_environment
  refinedby echo
end

declare obstacle [ speed_not_acquired ]
  name "Speed Not Acquired"
  refinedby ultrasound_broken
end

declare obstacle [ acquired_speed_not_accurate ]
  name "Acquired Speed Not Accurate"
  refinedby ultrasound_distortion
end

declare obstacle [ locals_not_warned ]
  name "Locals Not Warned In Time"
  refinedby voice_down
  refinedby gsm_down
end

#declare obstacle
#  id critical_not_detected
#  name "Critical Levels Not Detected"
#  refinedby low_refresh_rate_in_emergency
#end

# Obstacles

declare obstacle [ dusty_environment ]
  name "Dusty Environment"
  # formalspec sooner-or-later (radarDepthAcquired() and acquiredDepthCritical() and always, for more than 4 seconds, dustyEnvironment())
  $monitored "true"
  formalspec sooner-or-later (always, for more than 4 seconds, dustyEnvironment())
  probability .1
end

declare obstacle [ echo ]
  name "False Echo"
  # formalspec sooner-or-later (radarDepthAcquired() and acquiredDepthCritical() and always, for more than 4 seconds, falseEcho())
  formalspec sooner-or-later (always, for more than 4 seconds, falseEcho())
  $monitored "true"
  probability .08
end

declare obstacle [ depth_broken ]
  name "Radar Sensor Broken" 
  formalspec sooner-or-later (always, for more than 6 seconds, radarDepthSensorBroken())
  $monitored "true"
  probability .2
end

declare obstacle [ ultrasound_broken ]
  name "Ultrasound Sensor Broken"
 # formalspec sooner-or-later (not speedAcquiredByUltrasound() and always, for more than 6 seconds, ultrasoundSensorBroken())
  formalspec sooner-or-later (always, for more than 6 seconds, ultrasoundSensorBroken())
  $monitored "true"
  resolvedby [substitution:locals_warned_when_risk_imminent] speed_acquired_by_camera
 # resolvedby speed_acquired_by_camera
 # resolvedby speed_acquired_every_10_seconds
  probability .4
end

declare obstacle [ ultrasound_distortion ]
  name "Distortion in Ultrasound Measure"
 # formalspec sooner-or-later (speedAcquiredByUltrasound() and acquiredSpeedCritical() and always, for more than 6 seconds, ultrasoundDistortion())
   formalspec sooner-or-later (always, for more than 6 seconds, ultrasoundDistortion())
  resolvedby [substitution:avoid_false_warning] acquired_camera_speed_accurate
end

declare obstacle [ noisy_image ]
  name "Noisy Image"
  formalspec sooner-or-later (always, for more than 6 seconds, noisyImage())
  $monitored "true"
#  formalspec sooner-or-later (speedAcquiredByCamera() and acquiredSpeedCritical() and always, for more than 6 seconds, noisyImage())
#  resolvedby acquired_ultrasound_speed_accurate
  probability .05
end

declare obstacle [ voice_down ]
  name "Voice Network Overloaded"
  formalspec sooner-or-later (acquiredDepthCritical() and acquiredSpeedCritical()
                              and always, for more than 5 seconds, voiceNetworkOverloaded())
  $monitored "true"
  resolvedby [substitution:locals_warned_when_risk_imminent] locals_warned_by_sms
  resolvedby [substitution:locals_warned_when_risk_imminent] locals_warned_by_email
  probability .15
end

declare obstacle [ gsm_down ]
  name "GSM Network Down"
  formalspec sooner-or-later (acquiredDepthCritical() and acquiredSpeedCritical()
                              and always, for more than 5 seconds, gsmNetworkDown())
  resolvedby [substitution:locals_warned_when_risk_imminent] locals_warned_by_email
end

#declare obstacle
#  id low_refresh_rate_in_emergency
#  name "LowAcquisionRateInEmergencySituation"
#  eps .1
#  resolvedby (substitution[locals_warned]) "Achieve [LocalsWarnedWhenRiskImminentAndEmergencySituation]"
#end

# Resolutions

declare goal [ speed_acquired_every_10_seconds ]
	name "Achieve [SpeedAcquiredEvery10SecondsByUltrasound]"
	formalspec when not speedAcquiredByUltrasound() then sooner-or-later, before 10 seconds, speedAcquiredByUltrasound()
  assignedto ultrasoundSensor
end

declare goal [ speed_acquired_by_camera ]
	name "Achieve [SpeedAcquiredEvery5SecondsByCamera]"
  refinedby images_acquired, speed_acquired_from_images
  $ondeploy "DeployCamera"
  $onwithold "DeployUltrasound"
end

  declare goal [ images_acquired ]
    name "Achieve [ImagesAcquiredEvery5Seconds]"
    assignedto camera
  end

  declare goal [ speed_acquired_from_images ]
    name "Achieve [SpeedAcquiredFromImages]"
    assignedto cameraSpeedModule
    obstructedby noisy_image
  end

declare goal [ acquired_camera_speed_accurate ]
  name "Maintain [CameraSpeedAccurate]"
  assignedto cameraSpeedModule
  obstructedby noisy_image
  $ondeploy "DeployCamera"
  $onwithold "DeployUltrasound"
end

declare goal [ locals_warned_by_sms ]
  name "Achieve [LocalsWarnedBySMSWhenLevelsCritical]"
  formalspec when acquiredDepthCritical() and acquiredSpeedCritical()
             then sooner-or-later, before 5 seconds, localsWarnedBySMS()
  obstructedby gsm_down
  assignedto SMSWarner
  $ondeploy "DeploySMS"
  $onwithold "DeployPhone"
end

declare goal [ locals_warned_by_email ]
  name "  "
  formalspec when acquiredDepthCritical() and acquiredSpeedCritical()
             then sooner-or-later, before 5 seconds, localsWarnedByEmail()
  assignedto EmailWarner
  $ondeploy "DeployEmail"
  $onwithold "DeployPhone"
end

# Predicates

declare predicate [ radarDepthAcquired ]
	name "RadarDepthAcquired"
end

declare predicate [ depthAccurate ]
  name "DepthAccurate"
end

declare predicate [ speedAcquiredByUltrasound ]
	name "SpeedAcquiredByUltraSound"
end

declare predicate [ speedAcquiredByCamera ]
	name "SpeedAcquiredByCamera"
end

declare predicate [ speedAccurate ]
  name "SpeedAccurate"
end

declare predicate [ acquiredDepthCritical ]
  name "AcquiredDepthCritical"
end

declare predicate [ acquiredSpeedCritical ]
  name "AcquiredSpeedCritical"
end

declare predicate [ localsWarnedByPhone ]
  name "LocalsWarnedByPhone"
end

declare predicate [ localsWarnedBySMS ]
  name "LocalsWarnedBySMS"
end

declare predicate [ localsWarnedByEmail ]
  name "LocalsWarnedByEmail"
end

declare predicate [ DustyEnvironment ]
  name "DustyEnvironment"
end

declare predicate [ falseEcho ]
  name "FalseEcho"
end

declare predicate [ radarDepthSensorBroken ]
  name "DepthSensorBroken"
end

declare predicate [ ultrasoundSensorBroken ]
  name "UltrasoundSensorBroken"
end

declare predicate [ ultrasoundDistortion ]
  name "UltrasoundDistortion"
end

declare predicate [ noisyImage ]
  name "NoisyImage"
end

declare predicate [ gsmNetworkDown ]
  name "GSMNetworkDown"
end

declare predicate [ voiceNetworkOverloaded ]
  name "VoiceNetworkOveloaded"
end

# Agents

declare agent [ radarDepthSensor ]
  name "Depth Sensor"
end

declare agent [ ultrasoundSensor ]
  name "Ultrasound Sensor"
end

declare agent [ voiceWarner ]
  name "VoiceWarner"
end

declare agent [ fds ]
  name "Flooding Detection System"
end

# Constraints

# declare constraint
# 	id cst11
# 	name "Camera Speed Acquired and Acquired Radar Depth Accurate"
# 	conflict speed_acquired_by_camera, acquired_ultrasound_speed_accurate
# end
# 
# declare constraint
# 	id cst12
# 	name "Camera Speed Acquired and Acquired Radar Depth Accurate 2"
# 	conflict speed_acquired_every_5_seconds, acquired_camera_speed_accurate
# end
# 
# declare constraint
#   id cst13
#   conflict locals_warned_by_sms, locals_warned_by_email, locals_warned
# end
