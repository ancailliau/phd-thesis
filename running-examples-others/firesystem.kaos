
@title "Fire Alarm System"
@version "0.2"
@author "Antoine Cailliau"

# ---- Goals

declare goal [ root ]
	name "Maintain [Building Evacuated When Fire]"
	rsr 98%
	refinedby fire_automatically_detected, evacuated_when_detected
end

# -- Maintain [Fire Detected]

# declare goal
# 	id fire_detected
# 	name "Maintain [Fire Detected In Time]"
# 	refinedby fire_automatically_detected, fire_manually_detected
# end

	declare goal [ fire_automatically_detected ]
		name "Maintain [Fire Detected Automatically In Time]"
		refinedby heat_sensor_detection, smoke_sensor_detection, smoke_or_heat
	end

		declare goal [ heat_sensor_detection ]
			name "Maintain [Fire Noticed By Heat In Time]"
			assignedto heat_sensor
			obstructedby heat_detector_no_notice
		end

		declare goal [ smoke_sensor_detection ]
			name "Maintain [Fire Noticed By Smoke In Time]"
			assignedto smoke_sensor
			obstructedby smoke_detector_no_notice
		end

		declare goal [ smoke_or_heat ]
			name "Maintain [Fire Detected When Noticed In Time]"
			assignedto detection_system
			obstructedby fire_not_detected
		end

	declare goal [ fire_manually_detected ]
		name "Maintain [Fire Detected Manually In Time]"
		assignedto people
	end

# --  Maintain [Building Evacuated When Fire Detected]

declare goal [ evacuated_when_detected ]
	name "Maintain [Building Evacuated When Fire Detected]"
	refinedby alarm_raised, people_evacuation
end

	declare goal [ alarm_raised ]
		name "Maintain [Alarm Raised When Fire Detected]"
		refinedby alarm_deactivated, alarm_raised_unless
	end

		declare goal [ alarm_deactivated ]
			name "Maintain [Alarm Beep 30 Seconds Unless Disabled]"
			assignedto control_unit
		end

		declare goal [ alarm_raised_unless ]
			name "Maintain [Alarm Raised After 30 Seconds When Fire Detected Unless Disabled]"
			refinedby alarm_signal, alarm_raised_when_signal, notified_when_signal
		end

			declare goal [ alarm_signal ]
				name "Maintain [Alarm Signal After 30 Seconds When Fire Detected Unless Disabled]"
				assignedto control_unit
				obstructedby no_signal
			end

			declare goal [ alarm_raised_when_signal ]
				name "Maintain [Alarm Activated When Signal]"
				assignedto notification_system
				obstructedby alarm_not_raised
			end

			declare goal [ notified_when_signal ]
				name "Maintain [Fire Central Notified When Signal]"
				assignedto notification_system
				obstructedby not_notified_and_signal
			end

	declare goal [ people_evacuation ]
		name "Maintain [Building Evacuated When Alarm Raised]"
		assignedto people
	end

# ---- Obstacles

# ------ Obstacles for Maintain [Fire Detected]

declare obstacle [ smoke_detector_no_notice ]
	name "No Smoke Detection"
	refinedby smoke_detector_broken
	refinedby too_distant
	refinedby late_detection_heat
end

declare obstacle [ heat_detector_no_notice ]
	name "No Heat Detection"
	refinedby heat_detector_broken #, no_detection_when_broken
	refinedby too_distant
	refinedby late_detection_smoke
end

	# - Smoke

	declare obstacle [ smoke_detector_broken ]
		name "Smoke Detector Broken"
		probability[expert1] quantile[2.46%, 2.76%, 3.07%]
		probability[expert2] quantile[2.16%, 2.42%, 2.69%]
	end

	declare obstacle [ late_detection_smoke ]
		name "Fire Lately Noticed By Smoke"
		probability[expert1] quantile[1.46%, 1.83%, 2.04%]
		probability[expert2] quantile[1.26%, 1.42%, 2.24%]
	end

	# - Heat

	declare obstacle [ heat_detector_broken ]
		name "Heat Detector Broken"
		probability[expert1] quantile[0.41%, 0.46%, 0.51%]
		probability[expert2] quantile[0.50%, 0.56%, 0.62%]
	end
	
	declare domhyp [ no_detection_when_broken ]
		name "No Detection When Heat Detector Broken"
#		probability 99%
#		probability[expert1] quantile[98%, 98.5%, 99.5%]
#		#probability[expert2] quantile[99%, 99.6%, 99.9%]
	end

	declare obstacle [ late_detection_heat ]
		name "Fire Lately Noticed By Heat"
		probability[expert1] quantile[0.38%, 0.56%, 0.78%]
		probability[expert2] quantile[0.89%, 0.92%, 0.99%]
	end

	# - Smoke & Heat
	
	declare obstacle [ too_distant ]
		name "Fire Too Distant From Detector"
		probability[expert1] quantile[0.41%, 0.46%, 0.51%]
    probability[expert2] quantile[0.50%, 0.56%, 0.62%]
	end

declare obstacle [ fire_not_detected ]
	name "Fire Not Detected And Noticed"
	refinedby detection_delayed
	refinedby false_alarm_smoke
	refinedby false_alarm_heat
end

	declare obstacle [ detection_delayed ]
		name "Fire Detection Delayed"
		probability[expert1] quantile[1.29%, 2.48%, 3.20%]
		probability[expert2] quantile[1.30%, 2.98%, 3.48%]
	end

	declare obstacle [ false_alarm_smoke ]
		name "False Smoke Notification"
		probability[expert1] quantile[3.49%, 3.92%, 4.35%]
		probability[expert2] quantile[3.91%, 4.40%, 4.89%]
	end

	declare obstacle [ false_alarm_heat ]
		name "False Heat Notification"
		probability[expert1] quantile[0.47%, 0.53%, 0.59%]
		probability[expert2] quantile[0.38%, 0.43%, 0.48%]
	end

# ------ Obstacles for Maintain [Alarm Signal When Fire Detected]

declare obstacle [ no_signal ]
	name "No Alarm Signal And Fire Detected"
	refinedby battery_out
end

declare obstacle [ battery_out ]
	name "Battery Out of Service"
	probability[expert1] quantile[2.31%, 2.59%, 2.88%]
	probability[expert2] quantile[0.16%, 0.18%, 0.19%]
end

# ------ Obstacles for Maintain [Alarm Raised When Signal]

declare obstacle [ alarm_not_raised ]
	name "Alarm Not Raised And Signal"
	refinedby light_broken, bell_broken
end

declare obstacle [ light_broken ]
	name "Light Strobe Broken"
	probability[expert1] quantile[0.93%, 1.05%, 1.16%]
	probability[expert2] quantile[0.85%, 0.96%, 1.06%]
end

declare obstacle [ bell_broken ]
	name "Bell Broken"
	probability[expert1] quantile[1.47%, 1.65%, 1.83%]
	probability[expert2] quantile[1.70%, 1.91%, 2.12%]
end

# Maintain [Fire Central Notified When Signal]

declare obstacle [ not_notified_and_signal ]
	name "Fire Central Not Notified And Signal"
	refinedby network_down
	refinedby fire_central_notification_delay
end

	declare obstacle [ network_down ]
		name "Network Down"
		probability[expert1] quantile[0.95%, 2.31%, 3.67%]
		probability[expert2] quantile[1.46%, 2.39%, 3.31%]
	end

	declare obstacle [ fire_central_notification_delay ]
		name "Fire Central Notification Delayed"
		probability[expert1] quantile[1.29%, 2.48%, 3.20%]
		probability[expert2] quantile[1.30%, 2.98%, 3.48%]
	end

# ---- Agents

declare agent [ people ]
	name "Occupants"
end

declare agent [ control_unit ]
	name "Fire Control Unit"
end

declare agent [ detection_system ]
	name "Detection System"
end

declare agent [ notification_system ]
	name "Notification System"
end

# ---- Experts and Calibration

declare expert [ expert1 ]
	name "Expert 1"
end

declare expert [ expert2 ]
	name "Expert 2"
end

declare calibration [ calibration1 ]
	name "Push Button Broken"
	probability 4.37%
	probability[expert1] quantile[3.812%, 4.285%, 4.759%]
  probability[expert2] quantile[3.961%, 4.453%, 4.945%]
end

declare calibration [ calibration2 ]
	name "Temperature Sensor Broken"
	probability 4.37%
	probability[expert1] quantile[2.307%, 2.594%, 2.881%]
	probability[expert2] quantile[4.184%, 4.704%, 5.224%]
end

declare calibration [ calibration3 ]
	name "Fire Sprinkler Broken"
	probability 0.02%
	probability[expert1] quantile[0.023%, 0.026%, 0.029%]
	probability[expert2] quantile[0.019%, 0.022%, 0.024%]
end

@experts.quantiles "(.1, .5, .9)"